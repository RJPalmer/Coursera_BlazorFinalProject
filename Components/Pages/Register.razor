@page "/register/{Id:int}"
@inject EventService EventService
@using Microsoft.AspNetCore.Components.Forms
@using Coursera_BlazorFinalProject
@using System.ComponentModel.DataAnnotations
@using global::Coursera_BlazorFinalProject.Components.Models
@using global::Coursera_BlazorFinalProject.Components.Services

<h3>Register for @selectedEvent?.Name</h3>

@if (selectedEvent == null)
{
    <p>Event not found.</p>
}
else if (submitted)
{
    <p>Thank you for registering, @registration.Name!</p>
}
else
{
    <EditForm Model="@registration" OnValidSubmit="@HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Your Name:</label>
            <InputText @bind-Value="registration.Name" class="form-control" />
            <ValidationMessage For="@(() => registration.Name)" />
        </div>
        <div>
            <label>Email:</label>
            <InputText @bind-Value="registration.Email" class="form-control" />
            <ValidationMessage For="@(() => registration.Email)" />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private Event? selectedEvent;
    private Registration registration = new();
    private bool submitted = false;

    protected override void OnInitialized()
    {
        selectedEvent = EventService.GetEventById(Id);
    }

    private void HandleRegistration()
    {
        submitted = true;
    }

    public class Registration
    {
        [Required(ErrorMessage = "Name is required.")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; } = string.Empty;
    }
}